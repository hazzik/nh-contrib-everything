<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:tx="http://www.springframework.net/tx"
         xmlns:db="http://www.springframework.net/database">
  <!-- Property placeholder configurer for database settings -->

  <object type="Spring.Objects.Factory.Config.PropertyPlaceholderConfigurer, Spring.Core">
    <property name="ConfigSections" value="databaseSettings"/>
  </object>

  <!--SQL CE-->
  <db:provider
   id="DbProviderCE"
   provider="SqlServerCe-3.5.1"
   connectionString="Data Source=NHibernatePOC.sdf"/>

  <!--SQL Server 200x-->
  <db:provider
   id="DbProvider200x"
   provider="System.Data.SqlClient"
   connectionString="Data Source=SIMON-PC\SQLEXPRESS;Initial Catalog=envers;Integrated Security=True"/>
  
  <object id="ExecutingAssembly" type="Envers.Net.Model.Util.ExecutingAssemblyFactoryObject, APDRP_NHibernatePOC"/>

  <object id="NHibernateSessionFactory" type="Envers.Net.Utils.AttributesSessionFactoryObject" singleton="true" lazy-init="true">
    <!--SQL Server 200x-->
    <property name="DbProvider" ref="DbProvider200x"/>
    <!--SQL CE-->
    <!--<property name="DbProvider" ref="DbProviderCE"/>-->

    <property name="Assembly" ref="ExecutingAssembly"/>
    <property name="HibernateProperties">
      <dictionary>
        
        <!--SQL Server 200x-->
        <entry key="dialect" value="NHibernate.Dialect.MsSql2005Dialect"/>
        <entry key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.SqlClientDriver"/>
        
        <!--SQL CE-->
        <!--<entry key="dialect" value="NHibernate.Dialect.MsSqlCeDialect"/>
        <entry key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.SqlServerCeDriver"/>-->
        
        <entry key="hbm2ddl.auto" value="create"/>
        <entry key="connection.release_mode" value="on_close"/>
        <entry key="show_sql" value="true"/>
      </dictionary>
    </property>
    <property name="EventListeners">
      <dictionary>
        <entry key="PostInsert" value-ref="enversEventListener"/>
        <entry key="PostUpdate" value-ref="enversEventListener"/>
        <entry key="PostDelete" value-ref="enversEventListener"/>
        <entry key="PostCollectionRecreate" value-ref="enversEventListener"/>
        <entry key="PreCollectionRemove" value-ref="enversEventListener"/>
        <entry key="PreCollectionUpdate" value-ref="enversEventListener"/>
        </dictionary>
    </property>
  </object>

  <object id="enversEventListener" type="NHibernate.Envers.Event.AuditEventListener, Envers.NET"/>

  <object id="PersonRepository" type="Envers.Net.Repository.Repository&lt;Envers.Net.Model.Person>" lazy-init="true">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>
  <object id="AddressRepository" type="Envers.Net.Repository.Repository&lt;Envers.Net.Model.Address>" lazy-init="true">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <object id="ContBancarRepository" type="Envers.Net.Repository.Repository&lt;Envers.Net.Model.ContBancar>" lazy-init="true">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <object id="txManager" type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate21">
    <property name="sessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <!--<object id="transactionTemplate" type="Spring.Transaction.Support.TransactionTemplate">
    <property name="transactionManager" ref="txManager"/>
  </object>-->

  <tx:attribute-driven transaction-manager="txManager"/>

</objects>
