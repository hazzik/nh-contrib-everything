<#@ include file="Dsl\DomainClassCodeGenerator.tt" #>
<#@ Dsl processor="DslDirectiveProcessor"  requires="fileName='..\DslDefinition.dsl'" #>
<#@ import namespace="System.Reflection" #>

namespace NHibernate.NHDesigner
{
	//Autogenerated domain classes
	public partial class Entity : DslModeling::ModelElement
	{
		private @class modelObject = new @class();
		/*

		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x16ed2d83, 0xca54, 0x4fe2, 0x93, 0xba, 0x72, 0xa7, 0xf2, 0xe9, 0x43, 0x84);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for NHibernate.NHDesigner.Entity.Name
		/// </summary>
		[DslDesign::DisplayNameResource("NHibernate.NHDesigner.Entity/Name.DisplayName", typeof(global::NHibernate.NHDesigner.NHDesignerDomainModel), "NHibernate.NHDesigner.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("NHibernate.NHDesigner.Entity/Name.Description", typeof(global::NHibernate.NHDesigner.NHDesignerDomainModel), "NHibernate.NHDesigner.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("16ed2d83-ca54-4fe2-93ba-72a7f2e94384")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Entity.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Entity, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Entity.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Entity.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Entity element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Entity element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}

		#endregion
		*/
		#region Guid Pool
		//a set of permanet gui for the generated propeties...
		global::System.String[] guidPool = new global::System.String[]
		{
			"5de743c2-299d-48b0-8e7e-d642637eff27"
			,"d9614a48-4051-4f55-b382-5ea8c21e94f4"
			,"846da30b-3a1b-4a15-9640-ad84cd9a5d32"
			,"0dd20cd2-3feb-4d51-9b1c-416fc56628f3"
			,"92a2004e-4dca-4b91-a102-808801a20e0f"
			,"8af3c39c-233a-4680-9608-c62966df49e6"
			,"cb484275-c27e-46e2-90f8-e1b9ec8f41a5"
			,"85ab9c91-59d3-43a0-a00d-5478db7bcf6f"
			,"69901388-fa20-44dd-924f-32a922c2c7d8"
			,"ac90c79e-ad37-47ab-9f8e-1602190f9e97"
			,"be867085-7b8c-4351-a248-2fc836e10bd5"
			,"c7dbf9d5-6777-497d-b057-d1448675d16e"
			,"b560195e-889b-4f21-bfa2-8f00df319d41"
			,"8954c51a-7426-41b3-bbbf-3e68e6852394"
			,"8ea18e78-5298-4b15-baac-71244470a134"
			,"aa7ee529-d90a-4575-b80a-71eec9b1ff7b"
			,"baa290c8-d651-4f89-b283-a1b41be3d886"
			,"18ab21c1-e7f7-46bb-b09a-2e4a571590b2"
			,"d4f78445-9a4b-4a6e-b31e-c4d46c6eb5d9"
			,"aeafe82d-f26d-4a9a-83f9-adeb7e5a9425"
			,"c4271ab2-da44-44b6-8e35-4c3519476e86"
			,"e9dd697f-4325-477a-9fb0-8a2e60e058e3"
			,"4d5f47b8-981b-4986-9d52-846911231f5b"
			,"a7e0a9fc-24e7-419d-83ef-d58dff9f3ff9"
			,"95825a6e-2e86-490a-816a-ec62fbea8e62"
			,"b487977f-7af1-4acf-a96a-3a33a3a76b06"
			,"32421f81-f9d6-4f80-9781-83e7de1449fe"
			,"df2e9ca3-abd3-4b44-b5b0-09f5b3166c8f"
			,"f9a52a18-dfa6-4593-8085-a2bc58ee5f00"
			,"cafa02db-38dc-4e24-b79b-029863dca453"
			,"3eac839d-a6ec-4953-94ab-cb2bc80c98bb"
			,"a70ce7df-0c59-4f2a-8673-e0ce33ed955f"
			,"4af7edc1-b6ce-40c1-a25e-ff6cfef1cdeb"
			,"b1a32ded-33a8-4c71-9c04-05fd97c7bba0"
			,"2aa4e881-a4f3-44e2-82f9-a9aa86a0a04a"
			,"5255e374-6fdb-4637-a6b7-7360d95fea54"
			,"64bb0a3a-b594-48a7-afe8-c3bd61bf78d7"
			,"4c0c9e1e-c71f-4a13-b1b1-d656c141024d"
			,"19604858-5a53-468f-88e8-52851aea2b8b"
			,"b1074606-1e36-426a-8cd3-96838c46ac7c"
			,"72f12b63-9351-4b34-bbb8-10f100d87c97"
			,"21349c45-1099-4bca-b95c-09ddb1947bea"
			,"3c28cf5f-df26-4a15-a1eb-fd0fbc5b8c41"
			,"c99a47fb-89a8-4e4f-8821-b4f29671caca"
			,"9d0f3f44-5650-4ef5-abab-1b5ecee046c4"
			,"3c70b8e5-610c-448a-acdc-cb5ffb341361"
			,"fd3886d4-1918-4172-9b44-78a61b080c12"
			,"d9cbbaf8-0164-4ba5-8e38-1d3cc30138c9"
			,"7f165939-271a-4616-be2f-008098c66f7c"
			,"070ce99b-674a-4364-9b7f-512b53ed6f2a"
		};
		#endregion
		
	}
}