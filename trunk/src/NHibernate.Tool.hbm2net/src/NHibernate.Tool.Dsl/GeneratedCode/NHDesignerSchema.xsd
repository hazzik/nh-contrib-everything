<?xml version="1.0" encoding="utf-8"?>
<xsd:schema id="NHDesignerSchema" targetNamespace="http://schemas.microsoft.com/dsltools/NHDesigner" elementFormDefault="qualified" xmlns="http://schemas.microsoft.com/dsltools/NHDesigner" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- NHibernateModel -->
  <xsd:element name="nHibernateModel" type="NHibernateModel" />
  <xsd:complexType name="NHibernateModel">
    <xsd:annotation>
      <xsd:documentation>The root in which all other elements are embedded. Appears as a diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Relationship: NHibernateModelHasEntities -->
      <xsd:element name="entities" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Instances of NHibernateModelHasEntities</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded" >
              <xsd:element ref="nHibernateModelHasEntities">
                <xsd:annotation>
                  <xsd:documentation>[Relationship deriving from NHibernateModelHasEntities needs to be serialized in full-form]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="entity" >
                <xsd:annotation>
                  <xsd:documentation>[Target role-player]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <!-- Id -->
    <xsd:attribute name="Id" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Instance Guid of this element, needed because SerializeId is set to true.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <!-- dslVersion -->
    <xsd:attribute name="dslVersion" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Version of the model serialized in this file.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  
  <!-- NHibernateModel Moniker -->
  <xsd:element name="nHibernateModelMoniker" type="NHibernateModelMoniker" />
  <xsd:complexType name="NHibernateModelMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for NHibernateModel instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="Id" type="xsd:string" >
      <xsd:annotation>
        <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  
  <!-- Entity -->
  <xsd:element name="entity" type="Entity" />
  <xsd:complexType name="Entity">
    <xsd:annotation>
      <xsd:documentation>Elements embedded in the model. Appear as boxes on the diagram.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Relationship: EntityReferencesBase -->
      <xsd:element name="subclass" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Instances of EntityReferencesBase</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded" >
              <xsd:element ref="entityReferencesBase">
                <xsd:annotation>
                  <xsd:documentation>[Relationship deriving from EntityReferencesBase needs to be serialized in full-form]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="entityMoniker" >
                <xsd:annotation>
                  <xsd:documentation>[Target role-player]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <!-- Relationship: EntityHasProperties -->
      <xsd:element name="properties" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Instances of EntityHasProperties</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded" >
              <xsd:element ref="entityHasProperties">
                <xsd:annotation>
                  <xsd:documentation>[Relationship deriving from EntityHasProperties needs to be serialized in full-form]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="property" >
                <xsd:annotation>
                  <xsd:documentation>[Target role-player]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <!-- Relationship: EntityReferencesBaseWithJoin -->
      <xsd:element name="joinedSubclass" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>Instances of EntityReferencesBaseWithJoin</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded" >
              <xsd:element ref="entityReferencesBaseWithJoin">
                <xsd:annotation>
                  <xsd:documentation>[Relationship deriving from EntityReferencesBaseWithJoin needs to be serialized in full-form]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="entityMoniker" >
                <xsd:annotation>
                  <xsd:documentation>[Target role-player]</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <!-- Property: Name -->
    <xsd:attribute name="name" type="xsd:string" use="required" />
  </xsd:complexType>
  
  <!-- Entity Moniker -->
  <xsd:element name="entityMoniker" type="EntityMoniker" />
  <xsd:complexType name="EntityMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Entity instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" >
      <xsd:annotation>
        <xsd:documentation>Attribute to store the moniker string.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  
  <!-- Property -->
  <xsd:element name="property" type="Property" />
  <xsd:complexType name="Property">
    <!-- Property: Name -->
    <xsd:attribute name="name" type="xsd:string" />
  </xsd:complexType>
  
  <!-- Property Moniker -->
  <xsd:element name="propertyMoniker" abstract="true" type="PropertyMoniker" />
  <xsd:complexType name="PropertyMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for Property instance.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  
  <!-- NHibernateModelHasEntities -->
  <xsd:element name="nHibernateModelHasEntities" abstract="true" type="NHibernateModelHasEntities" />
  <xsd:complexType name="NHibernateModelHasEntities" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>Embedding relationship between the Model and Elements</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Target end Entity -->
      <xsd:element ref="entity" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>[Target role-player]</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- NHibernateModelHasEntities Moniker -->
  <xsd:element name="nHibernateModelHasEntitiesMoniker" abstract="true" type="NHibernateModelHasEntitiesMoniker" />
  <xsd:complexType name="NHibernateModelHasEntitiesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for NHibernateModelHasEntities instance.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  
  <!-- EntityReferencesBase -->
  <xsd:element name="entityReferencesBase" abstract="true" type="EntityReferencesBase" />
  <xsd:complexType name="EntityReferencesBase" abstract="true" >
    <xsd:annotation>
      <xsd:documentation>Reference relationship between Elements.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Target end Entity -->
      <xsd:element ref="entityMoniker" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>[Target role-player]</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- EntityReferencesBase Moniker -->
  <xsd:element name="entityReferencesBaseMoniker" abstract="true" type="EntityReferencesBaseMoniker" />
  <xsd:complexType name="EntityReferencesBaseMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EntityReferencesBase instance.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  
  <!-- EntityHasProperties -->
  <xsd:element name="entityHasProperties" abstract="true" type="EntityHasProperties" />
  <xsd:complexType name="EntityHasProperties" abstract="true" >
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Target end Property -->
      <xsd:element ref="property" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>[Target role-player]</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- EntityHasProperties Moniker -->
  <xsd:element name="entityHasPropertiesMoniker" abstract="true" type="EntityHasPropertiesMoniker" />
  <xsd:complexType name="EntityHasPropertiesMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EntityHasProperties instance.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  
  <!-- EntityReferencesBaseWithJoin -->
  <xsd:element name="entityReferencesBaseWithJoin" abstract="true" type="EntityReferencesBaseWithJoin" />
  <xsd:complexType name="EntityReferencesBaseWithJoin" abstract="true" >
    <xsd:sequence minOccurs="0" maxOccurs="1">
      <!-- Target end Entity -->
      <xsd:element ref="entityMoniker" minOccurs="1" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>[Target role-player]</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- EntityReferencesBaseWithJoin Moniker -->
  <xsd:element name="entityReferencesBaseWithJoinMoniker" abstract="true" type="EntityReferencesBaseWithJoinMoniker" />
  <xsd:complexType name="EntityReferencesBaseWithJoinMoniker">
    <xsd:annotation>
      <xsd:documentation>Moniker for EntityReferencesBaseWithJoin instance.</xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>
  
</xsd:schema>

